Terminals unused in grammar

   TOKEN_ERROR


State 38 conflicts: 8 shift/reduce, 1 reduce/reduce
State 51 conflicts: 8 shift/reduce, 1 reduce/reduce
State 93 conflicts: 8 shift/reduce
State 114 conflicts: 8 shift/reduce
State 123 conflicts: 1 shift/reduce
State 127 conflicts: 8 shift/reduce
State 133 conflicts: 8 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: decl

    2 decl: dec ';' decl
    3     | /* empty */

    4 dec: TK_IDENTIFIER '=' types ':' literals
    5    | TK_IDENTIFIER '=' types '[' LIT_INTEGER ']' ':' litList
    6    | TK_IDENTIFIER '=' types '[' LIT_INTEGER ']'
    7    | TK_IDENTIFIER '(' paramsFunc ')' '=' types block

    8 block: '{' commandList '}'

    9 commandList: cmd commandList
   10            | /* empty */

   11 cmd: TK_IDENTIFIER '=' expr
   12    | TK_IDENTIFIER '[' expr ']' '=' expr
   13    | KW_PRINT printList
   14    | KW_READ TK_IDENTIFIER
   15    | KW_RETURN expr
   16    | KW_IF '(' expr ')' KW_THEN cmd
   17    | KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd
   18    | KW_WHILE '(' expr ')' cmd
   19    | KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd
   20    | block
   21    | /* empty */

   22 printList: printCmd restPrintList

   23 restPrintList: ',' printCmd restPrintList
   24              | /* empty */

   25 printCmd: LIT_STRING
   26         | expr

   27 expr: TK_IDENTIFIER
   28     | TK_IDENTIFIER '[' expr ']'
   29     | TK_IDENTIFIER '(' funcArgs ')'
   30     | literals
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '*' expr
   34     | expr '/' expr
   35     | expr '>' expr
   36     | expr '<' expr
   37     | expr '|' expr
   38     | expr '^' expr
   39     | expr '~' expr
   40     | expr OPERATOR_LE expr
   41     | expr OPERATOR_GE expr
   42     | expr OPERATOR_EQ expr
   43     | expr OPERATOR_DIF expr
   44     | '(' expr ')'

   45 funcArgs: expr restFuncArgs
   46         | /* empty */

   47 restFuncArgs: ',' expr restFuncArgs
   48             | /* empty */

   49 paramsFunc: params paramsResto
   50           | /* empty */

   51 paramsResto: ',' params paramsResto
   52            | /* empty */

   53 params: TK_IDENTIFIER '=' types

   54 types: /* empty */
   55      | KW_CHAR
   56      | KW_INT
   57      | KW_FLOAT
   58      | KW_BOOL

   59 litList: literals litList
   60        | /* empty */

   61 literals: LIT_CHAR
   62         | LIT_FALSE
   63         | LIT_TRUE
   64         | LIT_FLOAT
   65         | LIT_INTEGER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 16 17 18 19 29 44
')' (41) 7 16 17 18 19 29 44
'*' (42) 33
'+' (43) 31
',' (44) 19 23 47 51
'-' (45) 32
'/' (47) 34
':' (58) 4 5 19
';' (59) 2
'<' (60) 36
'=' (61) 4 5 6 7 11 12 53
'>' (62) 35
'[' (91) 5 6 12 28
']' (93) 5 6 12 28
'^' (94) 38
'{' (123) 8
'|' (124) 37
'}' (125) 8
'~' (126) 39
error (256)
KW_CHAR (258) 55
KW_INT (259) 56
KW_FLOAT (260) 57
KW_BOOL (261) 58
KW_IF (262) 16 17
KW_THEN (263) 16 17
KW_ELSE (264) 17
KW_WHILE (265) 18
KW_LOOP (266) 19
KW_READ (267) 14
KW_PRINT (268) 13
KW_RETURN (269) 15
OPERATOR_LE (270) 40
OPERATOR_GE (271) 41
OPERATOR_EQ (272) 42
OPERATOR_DIF (273) 43
TK_IDENTIFIER (274) 4 5 6 7 11 12 14 19 27 28 29 53
LIT_INTEGER (275) 5 6 65
LIT_FLOAT (276) 64
LIT_TRUE (277) 63
LIT_FALSE (278) 62
LIT_CHAR (279) 61
LIT_STRING (280) 25
TOKEN_ERROR (281)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
programa (47)
    on left: 1, on right: 0
decl (48)
    on left: 2 3, on right: 1 2
dec (49)
    on left: 4 5 6 7, on right: 2
block (50)
    on left: 8, on right: 7 20
commandList (51)
    on left: 9 10, on right: 8 9
cmd (52)
    on left: 11 12 13 14 15 16 17 18 19 20 21, on right: 9 16 17 18
    19
printList (53)
    on left: 22, on right: 13
restPrintList (54)
    on left: 23 24, on right: 22 23
printCmd (55)
    on left: 25 26, on right: 22 23
expr (56)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44,
    on right: 11 12 15 16 17 18 19 26 28 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 47
funcArgs (57)
    on left: 45 46, on right: 29
restFuncArgs (58)
    on left: 47 48, on right: 45 47
paramsFunc (59)
    on left: 49 50, on right: 7
paramsResto (60)
    on left: 51 52, on right: 49 51
params (61)
    on left: 53, on right: 49 51
types (62)
    on left: 54 55 56 57 58, on right: 4 5 6 7 53
litList (63)
    on left: 59 60, on right: 5 59
literals (64)
    on left: 61 62 63 64 65, on right: 4 30 59


state 0

    0 $accept: . programa $end

    TK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl)

    programa  go to state 2
    decl      go to state 3
    dec       go to state 4


state 1

    4 dec: TK_IDENTIFIER . '=' types ':' literals
    5    | TK_IDENTIFIER . '=' types '[' LIT_INTEGER ']' ':' litList
    6    | TK_IDENTIFIER . '=' types '[' LIT_INTEGER ']'
    7    | TK_IDENTIFIER . '(' paramsFunc ')' '=' types block

    '='  shift, and go to state 5
    '('  shift, and go to state 6


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 7


state 3

    1 programa: decl .

    $default  reduce using rule 1 (programa)


state 4

    2 decl: dec . ';' decl

    ';'  shift, and go to state 8


state 5

    4 dec: TK_IDENTIFIER '=' . types ':' literals
    5    | TK_IDENTIFIER '=' . types '[' LIT_INTEGER ']' ':' litList
    6    | TK_IDENTIFIER '=' . types '[' LIT_INTEGER ']'

    KW_CHAR   shift, and go to state 9
    KW_INT    shift, and go to state 10
    KW_FLOAT  shift, and go to state 11
    KW_BOOL   shift, and go to state 12

    $default  reduce using rule 54 (types)

    types  go to state 13


state 6

    7 dec: TK_IDENTIFIER '(' . paramsFunc ')' '=' types block

    TK_IDENTIFIER  shift, and go to state 14

    $default  reduce using rule 50 (paramsFunc)

    paramsFunc  go to state 15
    params      go to state 16


state 7

    0 $accept: programa $end .

    $default  accept


state 8

    2 decl: dec ';' . decl

    TK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (decl)

    decl  go to state 17
    dec   go to state 4


state 9

   55 types: KW_CHAR .

    $default  reduce using rule 55 (types)


state 10

   56 types: KW_INT .

    $default  reduce using rule 56 (types)


state 11

   57 types: KW_FLOAT .

    $default  reduce using rule 57 (types)


state 12

   58 types: KW_BOOL .

    $default  reduce using rule 58 (types)


state 13

    4 dec: TK_IDENTIFIER '=' types . ':' literals
    5    | TK_IDENTIFIER '=' types . '[' LIT_INTEGER ']' ':' litList
    6    | TK_IDENTIFIER '=' types . '[' LIT_INTEGER ']'

    ':'  shift, and go to state 18
    '['  shift, and go to state 19


state 14

   53 params: TK_IDENTIFIER . '=' types

    '='  shift, and go to state 20


state 15

    7 dec: TK_IDENTIFIER '(' paramsFunc . ')' '=' types block

    ')'  shift, and go to state 21


state 16

   49 paramsFunc: params . paramsResto

    ','  shift, and go to state 22

    $default  reduce using rule 52 (paramsResto)

    paramsResto  go to state 23


state 17

    2 decl: dec ';' decl .

    $default  reduce using rule 2 (decl)


state 18

    4 dec: TK_IDENTIFIER '=' types ':' . literals

    LIT_INTEGER  shift, and go to state 24
    LIT_FLOAT    shift, and go to state 25
    LIT_TRUE     shift, and go to state 26
    LIT_FALSE    shift, and go to state 27
    LIT_CHAR     shift, and go to state 28

    literals  go to state 29


state 19

    5 dec: TK_IDENTIFIER '=' types '[' . LIT_INTEGER ']' ':' litList
    6    | TK_IDENTIFIER '=' types '[' . LIT_INTEGER ']'

    LIT_INTEGER  shift, and go to state 30


state 20

   53 params: TK_IDENTIFIER '=' . types

    KW_CHAR   shift, and go to state 9
    KW_INT    shift, and go to state 10
    KW_FLOAT  shift, and go to state 11
    KW_BOOL   shift, and go to state 12

    $default  reduce using rule 54 (types)

    types  go to state 31


state 21

    7 dec: TK_IDENTIFIER '(' paramsFunc ')' . '=' types block

    '='  shift, and go to state 32


state 22

   51 paramsResto: ',' . params paramsResto

    TK_IDENTIFIER  shift, and go to state 14

    params  go to state 33


state 23

   49 paramsFunc: params paramsResto .

    $default  reduce using rule 49 (paramsFunc)


state 24

   65 literals: LIT_INTEGER .

    $default  reduce using rule 65 (literals)


state 25

   64 literals: LIT_FLOAT .

    $default  reduce using rule 64 (literals)


state 26

   63 literals: LIT_TRUE .

    $default  reduce using rule 63 (literals)


state 27

   62 literals: LIT_FALSE .

    $default  reduce using rule 62 (literals)


state 28

   61 literals: LIT_CHAR .

    $default  reduce using rule 61 (literals)


state 29

    4 dec: TK_IDENTIFIER '=' types ':' literals .

    $default  reduce using rule 4 (dec)


state 30

    5 dec: TK_IDENTIFIER '=' types '[' LIT_INTEGER . ']' ':' litList
    6    | TK_IDENTIFIER '=' types '[' LIT_INTEGER . ']'

    ']'  shift, and go to state 34


state 31

   53 params: TK_IDENTIFIER '=' types .

    $default  reduce using rule 53 (params)


state 32

    7 dec: TK_IDENTIFIER '(' paramsFunc ')' '=' . types block

    KW_CHAR   shift, and go to state 9
    KW_INT    shift, and go to state 10
    KW_FLOAT  shift, and go to state 11
    KW_BOOL   shift, and go to state 12

    $default  reduce using rule 54 (types)

    types  go to state 35


state 33

   51 paramsResto: ',' params . paramsResto

    ','  shift, and go to state 22

    $default  reduce using rule 52 (paramsResto)

    paramsResto  go to state 36


state 34

    5 dec: TK_IDENTIFIER '=' types '[' LIT_INTEGER ']' . ':' litList
    6    | TK_IDENTIFIER '=' types '[' LIT_INTEGER ']' .

    ':'  shift, and go to state 37

    $default  reduce using rule 6 (dec)


state 35

    7 dec: TK_IDENTIFIER '(' paramsFunc ')' '=' types . block

    '{'  shift, and go to state 38

    block  go to state 39


state 36

   51 paramsResto: ',' params paramsResto .

    $default  reduce using rule 51 (paramsResto)


state 37

    5 dec: TK_IDENTIFIER '=' types '[' LIT_INTEGER ']' ':' . litList

    LIT_INTEGER  shift, and go to state 24
    LIT_FLOAT    shift, and go to state 25
    LIT_TRUE     shift, and go to state 26
    LIT_FALSE    shift, and go to state 27
    LIT_CHAR     shift, and go to state 28

    $default  reduce using rule 60 (litList)

    litList   go to state 40
    literals  go to state 41


state 38

    8 block: '{' . commandList '}'

    KW_IF          shift, and go to state 42
    KW_WHILE       shift, and go to state 43
    KW_LOOP        shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    '{'            shift, and go to state 38

    KW_IF          [reduce using rule 21 (cmd)]
    KW_WHILE       [reduce using rule 21 (cmd)]
    KW_LOOP        [reduce using rule 21 (cmd)]
    KW_READ        [reduce using rule 21 (cmd)]
    KW_PRINT       [reduce using rule 21 (cmd)]
    KW_RETURN      [reduce using rule 21 (cmd)]
    TK_IDENTIFIER  [reduce using rule 21 (cmd)]
    '{'            [reduce using rule 21 (cmd)]
    '}'            reduce using rule 10 (commandList)
    '}'            [reduce using rule 21 (cmd)]
    $default       reduce using rule 10 (commandList)

    block        go to state 49
    commandList  go to state 50
    cmd          go to state 51


state 39

    7 dec: TK_IDENTIFIER '(' paramsFunc ')' '=' types block .

    $default  reduce using rule 7 (dec)


state 40

    5 dec: TK_IDENTIFIER '=' types '[' LIT_INTEGER ']' ':' litList .

    $default  reduce using rule 5 (dec)


state 41

   59 litList: literals . litList

    LIT_INTEGER  shift, and go to state 24
    LIT_FLOAT    shift, and go to state 25
    LIT_TRUE     shift, and go to state 26
    LIT_FALSE    shift, and go to state 27
    LIT_CHAR     shift, and go to state 28

    $default  reduce using rule 60 (litList)

    litList   go to state 52
    literals  go to state 41


state 42

   16 cmd: KW_IF . '(' expr ')' KW_THEN cmd
   17    | KW_IF . '(' expr ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 53


state 43

   18 cmd: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 54


state 44

   19 cmd: KW_LOOP . '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

    '('  shift, and go to state 55


state 45

   14 cmd: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 56


state 46

   13 cmd: KW_PRINT . printList

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    LIT_STRING     shift, and go to state 58
    '('            shift, and go to state 59

    printList  go to state 60
    printCmd   go to state 61
    expr       go to state 62
    literals   go to state 63


state 47

   15 cmd: KW_RETURN . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 64
    literals  go to state 63


state 48

   11 cmd: TK_IDENTIFIER . '=' expr
   12    | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 65
    '['  shift, and go to state 66


state 49

   20 cmd: block .

    $default  reduce using rule 20 (cmd)


state 50

    8 block: '{' commandList . '}'

    '}'  shift, and go to state 67


state 51

    9 commandList: cmd . commandList

    KW_IF          shift, and go to state 42
    KW_WHILE       shift, and go to state 43
    KW_LOOP        shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    '{'            shift, and go to state 38

    KW_IF          [reduce using rule 21 (cmd)]
    KW_WHILE       [reduce using rule 21 (cmd)]
    KW_LOOP        [reduce using rule 21 (cmd)]
    KW_READ        [reduce using rule 21 (cmd)]
    KW_PRINT       [reduce using rule 21 (cmd)]
    KW_RETURN      [reduce using rule 21 (cmd)]
    TK_IDENTIFIER  [reduce using rule 21 (cmd)]
    '{'            [reduce using rule 21 (cmd)]
    '}'            reduce using rule 10 (commandList)
    '}'            [reduce using rule 21 (cmd)]
    $default       reduce using rule 10 (commandList)

    block        go to state 49
    commandList  go to state 68
    cmd          go to state 51


state 52

   59 litList: literals litList .

    $default  reduce using rule 59 (litList)


state 53

   16 cmd: KW_IF '(' . expr ')' KW_THEN cmd
   17    | KW_IF '(' . expr ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 69
    literals  go to state 63


state 54

   18 cmd: KW_WHILE '(' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 70
    literals  go to state 63


state 55

   19 cmd: KW_LOOP '(' . TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 71


state 56

   14 cmd: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 14 (cmd)


state 57

   27 expr: TK_IDENTIFIER .
   28     | TK_IDENTIFIER . '[' expr ']'
   29     | TK_IDENTIFIER . '(' funcArgs ')'

    '['  shift, and go to state 72
    '('  shift, and go to state 73

    $default  reduce using rule 27 (expr)


state 58

   25 printCmd: LIT_STRING .

    $default  reduce using rule 25 (printCmd)


state 59

   44 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 74
    literals  go to state 63


state 60

   13 cmd: KW_PRINT printList .

    $default  reduce using rule 13 (cmd)


state 61

   22 printList: printCmd . restPrintList

    ','  shift, and go to state 75

    $default  reduce using rule 24 (restPrintList)

    restPrintList  go to state 76


state 62

   26 printCmd: expr .
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89

    $default  reduce using rule 26 (printCmd)


state 63

   30 expr: literals .

    $default  reduce using rule 30 (expr)


state 64

   15 cmd: KW_RETURN expr .
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89

    $default  reduce using rule 15 (cmd)


state 65

   11 cmd: TK_IDENTIFIER '=' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 90
    literals  go to state 63


state 66

   12 cmd: TK_IDENTIFIER '[' . expr ']' '=' expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 91
    literals  go to state 63


state 67

    8 block: '{' commandList '}' .

    $default  reduce using rule 8 (block)


state 68

    9 commandList: cmd commandList .

    $default  reduce using rule 9 (commandList)


state 69

   16 cmd: KW_IF '(' expr . ')' KW_THEN cmd
   17    | KW_IF '(' expr . ')' KW_THEN cmd KW_ELSE cmd
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ')'           shift, and go to state 92


state 70

   18 cmd: KW_WHILE '(' expr . ')' cmd
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ')'           shift, and go to state 93


state 71

   19 cmd: KW_LOOP '(' TK_IDENTIFIER . ':' expr ',' expr ',' expr ')' cmd

    ':'  shift, and go to state 94


state 72

   28 expr: TK_IDENTIFIER '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 95
    literals  go to state 63


state 73

   29 expr: TK_IDENTIFIER '(' . funcArgs ')'

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    $default  reduce using rule 46 (funcArgs)

    expr      go to state 96
    funcArgs  go to state 97
    literals  go to state 63


state 74

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr
   44     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ')'           shift, and go to state 98


state 75

   23 restPrintList: ',' . printCmd restPrintList

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    LIT_STRING     shift, and go to state 58
    '('            shift, and go to state 59

    printCmd  go to state 99
    expr      go to state 62
    literals  go to state 63


state 76

   22 printList: printCmd restPrintList .

    $default  reduce using rule 22 (printList)


state 77

   40 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 100
    literals  go to state 63


state 78

   41 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 101
    literals  go to state 63


state 79

   42 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 102
    literals  go to state 63


state 80

   43 expr: expr OPERATOR_DIF . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 103
    literals  go to state 63


state 81

   37 expr: expr '|' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 104
    literals  go to state 63


state 82

   39 expr: expr '~' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 105
    literals  go to state 63


state 83

   36 expr: expr '<' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 106
    literals  go to state 63


state 84

   35 expr: expr '>' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 107
    literals  go to state 63


state 85

   31 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 108
    literals  go to state 63


state 86

   32 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 109
    literals  go to state 63


state 87

   33 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 110
    literals  go to state 63


state 88

   34 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 111
    literals  go to state 63


state 89

   38 expr: expr '^' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 112
    literals  go to state 63


state 90

   11 cmd: TK_IDENTIFIER '=' expr .
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89

    $default  reduce using rule 11 (cmd)


state 91

   12 cmd: TK_IDENTIFIER '[' expr . ']' '=' expr
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ']'           shift, and go to state 113


state 92

   16 cmd: KW_IF '(' expr ')' . KW_THEN cmd
   17    | KW_IF '(' expr ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 114


state 93

   18 cmd: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 42
    KW_WHILE       shift, and go to state 43
    KW_LOOP        shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    '{'            shift, and go to state 38

    KW_IF          [reduce using rule 21 (cmd)]
    KW_WHILE       [reduce using rule 21 (cmd)]
    KW_LOOP        [reduce using rule 21 (cmd)]
    KW_READ        [reduce using rule 21 (cmd)]
    KW_PRINT       [reduce using rule 21 (cmd)]
    KW_RETURN      [reduce using rule 21 (cmd)]
    TK_IDENTIFIER  [reduce using rule 21 (cmd)]
    '{'            [reduce using rule 21 (cmd)]
    $default       reduce using rule 21 (cmd)

    block  go to state 49
    cmd    go to state 115


state 94

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' . expr ',' expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 116
    literals  go to state 63


state 95

   28 expr: TK_IDENTIFIER '[' expr . ']'
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ']'           shift, and go to state 117


state 96

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr
   45 funcArgs: expr . restFuncArgs

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ','           shift, and go to state 118

    $default  reduce using rule 48 (restFuncArgs)

    restFuncArgs  go to state 119


state 97

   29 expr: TK_IDENTIFIER '(' funcArgs . ')'

    ')'  shift, and go to state 120


state 98

   44 expr: '(' expr ')' .

    $default  reduce using rule 44 (expr)


state 99

   23 restPrintList: ',' printCmd . restPrintList

    ','  shift, and go to state 75

    $default  reduce using rule 24 (restPrintList)

    restPrintList  go to state 121


state 100

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   40     | expr OPERATOR_LE expr .
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 40 (expr)


state 101

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   41     | expr OPERATOR_GE expr .
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 41 (expr)


state 102

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   42     | expr OPERATOR_EQ expr .
   43     | expr . OPERATOR_DIF expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 42 (expr)


state 103

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr
   43     | expr OPERATOR_DIF expr .

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 43 (expr)


state 104

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   37     | expr '|' expr .
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89

    $default  reduce using rule 37 (expr)


state 105

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   39     | expr '~' expr .
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89

    $default  reduce using rule 39 (expr)


state 106

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   36     | expr '<' expr .
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 36 (expr)


state 107

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   35     | expr '>' expr .
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    '+'  shift, and go to state 85
    '-'  shift, and go to state 86
    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 35 (expr)


state 108

   31 expr: expr . '+' expr
   31     | expr '+' expr .
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 31 (expr)


state 109

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    '*'  shift, and go to state 87
    '/'  shift, and go to state 88
    '^'  shift, and go to state 89

    $default  reduce using rule 32 (expr)


state 110

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   33     | expr '*' expr .
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    $default  reduce using rule 33 (expr)


state 111

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   34     | expr '/' expr .
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    $default  reduce using rule 34 (expr)


state 112

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   38     | expr '^' expr .
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    $default  reduce using rule 38 (expr)


state 113

   12 cmd: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 122


state 114

   16 cmd: KW_IF '(' expr ')' KW_THEN . cmd
   17    | KW_IF '(' expr ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 42
    KW_WHILE       shift, and go to state 43
    KW_LOOP        shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    '{'            shift, and go to state 38

    KW_IF          [reduce using rule 21 (cmd)]
    KW_WHILE       [reduce using rule 21 (cmd)]
    KW_LOOP        [reduce using rule 21 (cmd)]
    KW_READ        [reduce using rule 21 (cmd)]
    KW_PRINT       [reduce using rule 21 (cmd)]
    KW_RETURN      [reduce using rule 21 (cmd)]
    TK_IDENTIFIER  [reduce using rule 21 (cmd)]
    '{'            [reduce using rule 21 (cmd)]
    $default       reduce using rule 21 (cmd)

    block  go to state 49
    cmd    go to state 123


state 115

   18 cmd: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 18 (cmd)


state 116

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr . ',' expr ',' expr ')' cmd
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ','           shift, and go to state 124


state 117

   28 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 28 (expr)


state 118

   47 restFuncArgs: ',' . expr restFuncArgs

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 125
    literals  go to state 63


state 119

   45 funcArgs: expr restFuncArgs .

    $default  reduce using rule 45 (funcArgs)


state 120

   29 expr: TK_IDENTIFIER '(' funcArgs ')' .

    $default  reduce using rule 29 (expr)


state 121

   23 restPrintList: ',' printCmd restPrintList .

    $default  reduce using rule 23 (restPrintList)


state 122

   12 cmd: TK_IDENTIFIER '[' expr ']' '=' . expr

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 126
    literals  go to state 63


state 123

   16 cmd: KW_IF '(' expr ')' KW_THEN cmd .
   17    | KW_IF '(' expr ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 127

    KW_ELSE   [reduce using rule 16 (cmd)]
    $default  reduce using rule 16 (cmd)


state 124

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' . expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 128
    literals  go to state 63


state 125

   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr
   47 restFuncArgs: ',' expr . restFuncArgs

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ','           shift, and go to state 118

    $default  reduce using rule 48 (restFuncArgs)

    restFuncArgs  go to state 129


state 126

   12 cmd: TK_IDENTIFIER '[' expr ']' '=' expr .
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89

    $default  reduce using rule 12 (cmd)


state 127

   17 cmd: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 42
    KW_WHILE       shift, and go to state 43
    KW_LOOP        shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    '{'            shift, and go to state 38

    KW_IF          [reduce using rule 21 (cmd)]
    KW_WHILE       [reduce using rule 21 (cmd)]
    KW_LOOP        [reduce using rule 21 (cmd)]
    KW_READ        [reduce using rule 21 (cmd)]
    KW_PRINT       [reduce using rule 21 (cmd)]
    KW_RETURN      [reduce using rule 21 (cmd)]
    TK_IDENTIFIER  [reduce using rule 21 (cmd)]
    '{'            [reduce using rule 21 (cmd)]
    $default       reduce using rule 21 (cmd)

    block  go to state 49
    cmd    go to state 130


state 128

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr . ',' expr ')' cmd
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ','           shift, and go to state 131


state 129

   47 restFuncArgs: ',' expr restFuncArgs .

    $default  reduce using rule 47 (restFuncArgs)


state 130

   17 cmd: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 17 (cmd)


state 131

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 57
    LIT_INTEGER    shift, and go to state 24
    LIT_FLOAT      shift, and go to state 25
    LIT_TRUE       shift, and go to state 26
    LIT_FALSE      shift, and go to state 27
    LIT_CHAR       shift, and go to state 28
    '('            shift, and go to state 59

    expr      go to state 132
    literals  go to state 63


state 132

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr . ')' cmd
   31 expr: expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '>' expr
   36     | expr . '<' expr
   37     | expr . '|' expr
   38     | expr . '^' expr
   39     | expr . '~' expr
   40     | expr . OPERATOR_LE expr
   41     | expr . OPERATOR_GE expr
   42     | expr . OPERATOR_EQ expr
   43     | expr . OPERATOR_DIF expr

    OPERATOR_LE   shift, and go to state 77
    OPERATOR_GE   shift, and go to state 78
    OPERATOR_EQ   shift, and go to state 79
    OPERATOR_DIF  shift, and go to state 80
    '|'           shift, and go to state 81
    '~'           shift, and go to state 82
    '<'           shift, and go to state 83
    '>'           shift, and go to state 84
    '+'           shift, and go to state 85
    '-'           shift, and go to state 86
    '*'           shift, and go to state 87
    '/'           shift, and go to state 88
    '^'           shift, and go to state 89
    ')'           shift, and go to state 133


state 133

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' . cmd

    KW_IF          shift, and go to state 42
    KW_WHILE       shift, and go to state 43
    KW_LOOP        shift, and go to state 44
    KW_READ        shift, and go to state 45
    KW_PRINT       shift, and go to state 46
    KW_RETURN      shift, and go to state 47
    TK_IDENTIFIER  shift, and go to state 48
    '{'            shift, and go to state 38

    KW_IF          [reduce using rule 21 (cmd)]
    KW_WHILE       [reduce using rule 21 (cmd)]
    KW_LOOP        [reduce using rule 21 (cmd)]
    KW_READ        [reduce using rule 21 (cmd)]
    KW_PRINT       [reduce using rule 21 (cmd)]
    KW_RETURN      [reduce using rule 21 (cmd)]
    TK_IDENTIFIER  [reduce using rule 21 (cmd)]
    '{'            [reduce using rule 21 (cmd)]
    $default       reduce using rule 21 (cmd)

    block  go to state 49
    cmd    go to state 134


state 134

   19 cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd .

    $default  reduce using rule 19 (cmd)
